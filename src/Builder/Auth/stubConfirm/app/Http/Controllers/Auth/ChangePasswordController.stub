<?php

namespace {{namespace}}Http\Controllers\Auth;

use {{modelNamespace}}\User;
use Illuminate\Http\Request;
use {{namespace}}Http\Controllers\Controller;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Lang;

class ChangePasswordController extends Controller
{
    public function __construct()
    {
        $this->middleware('auth');
    }

    public function showChangePasswordForm(){
        return view('auth.changepassword');
    }

    public function changePassword(Request $request){
        // Check current password
        if (!Hash::check($request->get('current-password'), Auth::user()->password)) {
            // The passwords matches
            notify()->error(Lang::getFromJson('Your current password does not matches with the password you provided. Please try again.'),
                            Lang::getFromJson('Change Password'));
            return redirect()->back();
        }

        if(strcmp($request->get('current-password'), $request->get('new-password')) == 0){
            //Current password and new password are same
            notify()->error(Lang::getFromJson('New Password cannot be same as your current password. Please choose a different password.'),
                            Lang::getFromJson('Change Password'));
            return back();
        }

        $validatedData = $request->validate([
            'current-password' => 'required',
            'new-password' => 'required|string|min:8|confirmed',
        ]);

        //Change Password
        $user = Auth::user();
        $user->password = Hash::make($request->get('new-password'));
        $user->save();

        // $user->logout();
        notify()->success('Senha alterada com sucesso!','Change Password');
        // return view('pages.dashboard');
        return redirect()->back();
    }
}
